#!/usr/bin/python
import getopt,copy,re,os,sys,logging,time,datetime;
options, args = getopt.getopt(sys.argv[1:], 'i:o:',['input=','output=','comparison=','analysis=','p=','FDR=','Diff='])
input='';
output='.'
comparison=''
analysis='U'
p = 1
FDR =0.05
Diff= 0.05
for opt, arg in options:
	if opt in ('-i','--input'):
		input = arg
	elif opt in ('-o','--output'):
		output = arg
	elif opt in ('--comparison'):
               	comparison= arg
	elif opt in ('--p'):
		p = int(arg)
	elif opt in ('--FDR'):
                FDR = float(arg)
        elif opt in ('--Diff'):
                Diff = float(arg)
	elif opt in ('--analysis'):
                analysis = arg
if (not input or not comparison):
	print "Not enough parameters"
	print "Program : ", sys.argv[0]
	print "          A python program to run rMATS model on the count files of CARIE"
	print "Usage :", sys.argv[0], " -i/--input: The count files generated by CARIE program"
	print "Usage :", sys.argv[0], " -o/--output: The output directory. The default is current directory"
	print "Usage :", sys.argv[0], " --comparison: A file providing the samples pairs need to be calculating the differential RI level. If absent, rMATs step will be skipped"
	print "uasge: ", sys.argv[0], " --analysis: Type of rMATS analysis to perform. analysisType is either 'P' or 'U'. 'P' is for paired analysis and 'U' is for unpaired analysis. Default is 'U' "
	print "Usage :", sys.argv[0], " --p: The number of threads used to run rMATS. The default is 1"
	print "Usage :", sys.argv[0], " --FDR: The maximum FDR  used to output the significant differential RI events. The default is 0.05"
	print "Usage :", sys.argv[0], " --Diff: The minimum difference of RI level used to output the significant differential RI events. The default is 0.05"
	print datetime.datetime.now()
	print "Author  : Shaofang Li"
	print "Contact : sfli001@gmail.com"
	sys.exit()

if (not os.path.exists(output)):
        os.system("mkdir %s" % output)
path = os.path.abspath(os.path.dirname(__file__));
bin_path = "%s/bin" % path
fr =open(comparison)
for info in fr:
        a = info.strip().split()
	ss1= a[1].split(",")
        ss2= a[2].split(",")
	fw = open("%s/rMATs_%s.txt" % (output,a[0]),"w")	
	fw.write("ID\tIJC_SAMPLE_1\tSJC_SAMPLE_1\tIJC_SAMPLE_2\tSJC_SAMPLE_2\tIncFormLen\tSkipFormLen\n")
	fr1 = open(input)
	info1 = fr1.readline()
	for info1 in fr1:
		a1 = info1.split("\t")
		skp1 = [0] * len(ss1)
		inc1 = [0] * len(ss1)
		skp2 = [0] * len(ss2)
		inc2 = [0] * len(ss2)
		in_level = a1[8].split(",")
                sk_level = a1[9].split(",")
		sum1 = 0
		sum2 = 0
		for i in range(0,len(ss1)):
			inc1[i] = in_level[int(ss1[i])-1]
			skp1[i] = sk_level[int(ss1[i])-1]
			sum1 += int(inc1[i])
			sum1 += int(skp1[i])
		for i in range(0,len(ss2)):
                        inc2[i] = in_level[int(ss2[i])-1]
                        skp2[i] = sk_level[int(ss2[i])-1]	
			sum2 += int(inc2[i])
                        sum2 += int(skp2[i])
		if(sum1+sum2 > 0):
			fw.write("%s\t%s\t%s\t%s\t%s\t%s\t%s\n" % (a1[0],",".join(inc1),",".join(skp1), ",".join(inc2),",".join(skp2),a1[10],a1[11]))
	fr1.close()
	fw.close()
	cmd ="%s/MATS/rMATS.sh -d %s/rMATs_%s.txt -o %s/rMATs_%s -p %s  -t %s -c 0.0001" %(bin_path,output,a[0],output,a[0],p,analysis)
        print cmd
	os.system(cmd)
	logging.debug("finsh running the rMATs for" + a[0])
	logging.debug("output the final result of rMATs" + a[0])
	fr1 = open(input)
        fr2 = open("%s/rMATs_%s/rMATS_Result.txt" %(output,a[0]))
        fw = open("%s/rMATs_Result_%s.txt" %(output, a[0]),"w")
        fw.write("Intron_id\tgene_id\tstrand\tchr\tstart\tend\tannoated\tclean\tinclusions_counts_SAMPLE1\tskip_counts_SAMPLE1\tinclusions_counts_SAMPLE2\tskip_counts_SAMPLE2\tInclusion_length\tSkipping_length\tPValue\tFDR\tIncLevel_SAMPLE1\tIncLevel_SAMPLE2\tIncLevelDifference\n")
        fw1 = open("%s/Increase_rMATs_Result_%s.txt" %(output, a[0]),"w")
        fw2 = open("%s/Decrease_rMATs_Result_%s.txt" %(output, a[0]),"w")
        fw1.write("Intron_id\tgene_id\tstrand\tchr\tstart\tend\tannoated\tclean\tinclusions_counts_SAMPLE1\tskip_counts_SAMPLE1\tinclusions_counts_SAMPLE2\tskip_counts_SAMPLE2\tInclusion_length\tSkipping_length\tPValue\tFDR\tIncLevel_SAMPLE1\tIncLevel_SAMPLE2\tIncLevelDifference\n")
        fw2.write("Intron_id\tgene_id\tstrand\tchr\tstart\tend\tannoated\tclean\tinclusions_counts_SAMPLE1\tskip_counts_SAMPLE1\tinclusions_counts_SAMPLE2\tskip_counts_SAMPLE2\tInclusion_length\tSkipping_length\tPValue\tFDR\tIncLevel_SAMPLE1\tIncLevel_SAMPLE2\tIncLevelDifference\n")
	info1 = fr1.readline()
        info2 = fr2.readline()
        re = dict() 
        for info2 in fr2:
                a2 = info2.strip().split("\t")
                re[a2[0]] = "\t".join(a2[1:])
        for info1 in fr1:
                a1 = info1.strip().split("\t")
                if(re.has_key(a1[0])):
                        re[a1[0]] = "\t".join(a1[0:8]) + "\t" + re[a1[0]]
        fr1.close()         
        fr2.close()
        fr2 = open("%s/rMATs_%s/rMATS_Result.txt" %(output,a[0]))
        info2 = fr2.readline()
        for info2 in fr2:
                a2 = info2.strip().split("\t")
                fw.write("%s\n" % (re[a2[0]]))
        	if(float(a2[8]) < FDR and float(a2[11]) < -Diff):
                        fw1.write("%s\n" % (re[a2[0]]))
                if(float(a2[8]) < FDR and float(a2[11]) > Diff):
                        fw2.write("%s\n" % (re[a2[0]]))
        fr2.close()
        fw.close()
        fw1.close()
        fw2.close()
fr.close()

